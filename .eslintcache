[{"C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\GREEN_LIST\\src\\App.tsx":"1","C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\GREEN_LIST\\src\\reportWebVitals.ts":"2","C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\GREEN_LIST\\src\\01-hello-tests\\01.ts":"3","C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\GREEN_LIST\\src\\index.tsx":"4","C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\GREEN_LIST\\src\\03\\03.ts":"5","C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\GREEN_LIST\\src\\05\\06-callbacks.tsx":"6"},{"size":604,"mtime":1608324426707,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1606241694222,"results":"9","hashOfConfig":"8"},{"size":427,"mtime":1608070043887,"results":"10","hashOfConfig":"8"},{"size":615,"mtime":1608232827335,"results":"11","hashOfConfig":"8"},{"size":1168,"mtime":1608232827334,"results":"12","hashOfConfig":"8"},{"size":1020,"mtime":1613335304270,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1fv1bf4",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\GREEN_LIST\\src\\App.tsx",["28","29"],"C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\GREEN_LIST\\src\\reportWebVitals.ts",[],"C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\GREEN_LIST\\src\\01-hello-tests\\01.ts",[],"C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\GREEN_LIST\\src\\index.tsx",["30","31"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {splitIntoWords} from './01-hello-tests/01';\r\nimport {sum} from './03/03';\r\n\r\nvar a = sum\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\GREEN_LIST\\src\\03\\03.ts",["32","33"],"import {student, StudentType} from '../02/02'\r\nimport {CityType, governmentBuildingsType, HouseType} from '../02/02_02';\r\n\r\n\r\nexport const sum = (a: number, b: number) => {\r\n    return a + b;\r\n}\r\n\r\nconst res = sum(sum(1,2), sum(1,3))\r\n\r\n\r\nexport const addSkill = (student: StudentType, skill: string) => {\r\n    student.technologies.push({id: new Date().getTime(),\r\n    title: skill\r\n    })\r\n\r\n}\r\n\r\nexport function makeStudentActive(s: StudentType) {\r\n    s.isActive = true;\r\n}\r\n\r\n\r\nexport const doesStudentLiveIn = (s: StudentType, cityName: string) => {\r\n    return s.address.city.title === cityName;\r\n}\r\n\r\nexport const addMoneyToBudget = (building: governmentBuildingsType, budget: number) => {\r\n    building.budget += budget;\r\n}\r\n\r\n\r\nexport const repairHouse = (house: HouseType) => {\r\n    house.repaired = true;\r\n}\r\n\r\nexport const toHireStaff = (building: governmentBuildingsType, staff: number) => {\r\n    building.staffCount += staff\r\n}\r\n\r\n\r\nexport const toFireStaff = (building: governmentBuildingsType, staff: number) => {\r\n    building.staffCount -= staff\r\n}\r\n\r\n\r\nexport const createMessage = (city: CityType) => {\r\n    return `hello ${city.title} citizens`\r\n}","C:\\Users\\dmvsh\\OneDrive\\Documents\\GitHub\\GREEN_LIST\\src\\05\\06-callbacks.tsx",["34"],{"ruleId":"35","severity":1,"message":"36","line":2,"column":8,"nodeType":"37","messageId":"38","endLine":2,"endColumn":12},{"ruleId":"35","severity":1,"message":"39","line":6,"column":9,"nodeType":"37","messageId":"38","endLine":6,"endColumn":14},{"ruleId":"35","severity":1,"message":"40","line":6,"column":9,"nodeType":"37","messageId":"38","endLine":6,"endColumn":23},{"ruleId":"35","severity":1,"message":"41","line":9,"column":5,"nodeType":"37","messageId":"38","endLine":9,"endColumn":6},{"ruleId":"35","severity":1,"message":"42","line":1,"column":9,"nodeType":"37","messageId":"38","endLine":1,"endColumn":16},{"ruleId":"35","severity":1,"message":"43","line":9,"column":7,"nodeType":"37","messageId":"38","endLine":9,"endColumn":10},{"ruleId":"35","severity":1,"message":"44","line":18,"column":11,"nodeType":"37","messageId":"38","endLine":18,"endColumn":19},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'names' is assigned a value but never used.","'splitIntoWords' is defined but never used.","'a' is assigned a value but never used.","'student' is defined but never used.","'res' is assigned a value but never used.","'saveUser' is assigned a value but never used."]